
//.def norm16(rns1, debug=False):{
//.my_rns1 = rnsv("norm16_rns1", "rns1", rns1.base)
//.xmod11 = my_rns1.xmod('xmod11', 11)
//.+sec.norm16("norm16.sv")
`include "structs.sv"
//.my_rns1.includes > ''
module norm16(
	      output @rns1@ nx,
	      input @rns1@ x
);
   //.nx = my_rns1('no declaration').nx
   //.x = my_rns1('no declaration').x
   //.my_rns1.declarations > ''
   //.my_rns1.instances > ''
   //.my_rns1.comb > ''
   //.# assign @t0:=xmod11.t0@ = @(x[1] - (t0 << x[0]))/rns1.base[0]@;
   //.# assign @t0:=xmod11.t0@ = @(x[1] - (xmod11 << x[0]))/rns1.base[0]@;
   assign @t0:=xmod11.t0@ = @(x[1] - (x[0] >> 11))/rns1.base[0]@;
   assign @nx:=my_rns1.nx@ = @nx << ((x[0] >> 16) + (t0 >> 16))@;
   //.#assign @nx:=my_rns1.nx@ = @((x[0] >> 16) + (t0 >> 16)) >> my_rns1@;
   //.if debug:{
   always @@(t0) begin
      $display("%m: t0: %b", t0);
   end
   //.}
endmodule // norm16
//.-sec.norm16
//.+rns1.includes
`include "norm16.sv"
//.-rns1.includes
//.return "norm16"
//.} # end def norm16
